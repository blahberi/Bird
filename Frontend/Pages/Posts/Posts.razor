@page "/posts"
@using Frontend.Components.AuthRedirect
@using Frontend.Services
@using Shared
@using Shared.DTOs.Posts
@using Frontend.Components
@using Frontend.Components.LikeButton

<PageTitle>Posts</PageTitle>

<AuthRedirect />

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Posts</h1>
        <button class="btn btn-primary" @onclick="CreateNewPost">
            <i class="bi bi-plus-lg"></i> New Post
        </button>
    </div>

    @if (posts == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!posts.Any())
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle-fill me-2"></i> No posts available. Be the first to create a post!
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 g-4">
            @foreach (var post in posts)
            {
                <div class="col">
                    <div class="card h-100 post-card">
                        <div class="card-body">
                            <h5 class="card-title post-title">@post.Title</h5>
                            <p class="card-text post-content">@post.Content</p>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">Posted by @post.UserName on @post.CreatedAt.ToString("g")</small>
                                <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewPost(post.Id)">
                                    <i class="bi bi-eye"></i> View
                                </button>
                            </div>
                            <div class="d-flex mt-2 align-items-center">
                                <LikeButton @key="post.Id" PostId="@post.Id" InitialIsLiked="@post.IsLikedByCurrentUser"
                                    ShowCount="true" Small="true" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (totalPages > 1)
        {
            <div class="d-flex justify-content-center mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        <li class="page-item @(currentPage == 0 ? "disabled" : "")">
                            <button class="page-link" @onclick="PreviousPage" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </button>
                        </li>
                        @for (int i = Math.Max(0, currentPage - 2); i <= Math.Min(currentPage + 2, totalPages - 1); i++)
                        {
                            var pageNumber = i;
                            <li class="page-item @(pageNumber == currentPage ? "active" : "")">
                                <button class="page-link" @onclick="() => GoToPage(pageNumber)">@(pageNumber + 1)</button>
                            </li>
                        }
                        <li class="page-item @(currentPage >= totalPages - 1 ? "disabled" : "")">
                            <button class="page-link" @onclick="NextPage" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </button>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    }
</div>